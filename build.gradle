plugins {
	id 'org.springframework.boot' version '2.5.12'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id 'jacoco'
	id 'org.sonarqube' version '3.0'
}

group = 'com.bicimoto.app'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
	//implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.6.3'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.3'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.3'
	implementation 'org.json:json:20220320'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	//testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

jacoco {
	toolVersion = "0.8.9"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}
	}
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

bootWar {
	archiveName 'service-bicimoto-api.war'
}